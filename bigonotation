BIG O NOTATION
"How code slows as data grows."

O(1) = constant time
- random acess of an element in an array
- inserting at the beginning of linkedlist

O(log n) = logarithmic time
- binary search

O(n) = linear time
- looping through elements in an array
- searching through a linkedlist

O(n log n) = quasilinear time
- quicksort
- mergesort
-heapsort

O(nÂ²) = quadratic time
- insertion sort
- selection sort
- bubblesort

O(n!) = factorial time
- traveling salesman problem
